#an unordered collection of unique and immutable 
#objects that supports operations corresponding to
#mathematical set theory
# python 2.6 and earlier
print('-' * 80)
x = set('abcdeabcde')
y = set('bdxyzbdxyz')
for item in x:
	print('Item is : ', item)
print('Set x is : ', x)
print('set y is : ', y)
print('Difference : ', (x - y))
print('Union : ', (x | y))
print('Intersection : ', (x & y))
print('Symmetric difference : ', x ^ y)
print('Superset : ', x > y)
print('Subset : ', x < y)
print('e' in x)
print(22 in [11,22,33])
print('-' * 80)
#set methods
x = set('abcde')
y = set('bdxyz')
z = x.intersection(y)
print(z)
z.add('spam')
print(z)
z.update(set(['x', 'y']))
print(z)
z.remove('b')
print(z)
for item in set('abc'):
	print(item * 3)
print('-' * 80)
s = set([1,2,3])
print(s | set([3,4]))
print(s)
print(s.union([3,4]))
print(s.intersection((1,3,5)))
print(s.issubset(range(-5,5)))
print('-' * 80)
#python 3.x 
s = {1,2,3,4}
print(s)
s = {'a','b','c','d','e'}
print(s)
s.add('alot')
print(s)
s = {1,2,3,4}
print(s & {1,3})
print({1,5,3,6} | s)
print(s - {1,3,4})
print(s > {1,3})
print(s - {1,2,3,4})
print(type({}))
s = set()
s.add(1.23)
print(s)
print({1,2,3} | {3,4})
print({1,2,3}.union([3,4]))
print({1,2,3}.union({3,4}))
print({1,2,3}.union(set([3,4])))
print({1,2,3}.intersection((1,3,5)))
print({1,2,3}.issubset(range(-5,5)))
print('-' * 80)
s = {x ** 2 for x in [1,2,3,4] if x % 2 == 0}
print(s)
s = {x for x in 'spam'}
print(s)
s = {x * 4 for x in 'spam'}
print(s)
s = {x * 4 for x in 'spamham'}
print(s)
print(s | {'mmmm','xxxx'})
print(s & {'mmmm','xxxx'})
print('-' * 80)
# Remove duplicates
l = [1,2,3,3,4,2,5,4,1]
print(l)
print(([1,2,3,3,4,2,5,4,1]))
s = set()
for i in l:
	s.add(i)
print(s)
print(list(s))
print(list(set(l)))
print(list(set(['yy','cc','aa','xx','dd','aa'])))
print(set([1,3,5,7]) - set([1,2,4,5,6]))
print(set([1,2,4,5,6]) - set([1,3,5,7]))
print(set('abcdefg') - set('abdghij'))
print(set('spam') - set(['h','a','m']))
print('-' * 80)
l1,l2 = [1,3,5,2,4],[2,5,3,4,1]
print(l1 == l2)
print(set(l1) == set(l2))
print(sorted(l1) == sorted(l2))
print('spam' == 'apsm')
print(set('spam') == set('apsm'))
print(sorted('sapm') == sorted('spam'))
print('-' * 80)
engineers = {'Bob','Sue','Ann','Vic'}
managers = {'Tom','Sue'}
print('Bob' in engineers)
print(engineers & managers)
print(engineers | managers)
print(engineers - managers)
print(managers - engineers)
print(engineers > managers)
print({'Bob', 'Sue'} < engineers)
print((managers | engineers) > managers)
print(managers ^ engineers)
print((managers | engineers) - (managers ^ engineers))
print('-' * 80)